%pezzo("pedone",0,"nero",0,1).
%pezzo("pedone",1,"nero",1,1).
%pezzo("pedone",2,"nero",2,1).
%pezzo("pedone",3,"nero",3,1).
%pezzo("pedone",4,"nero",4,1).
%pezzo("pedone",5,"nero",5,1).
%pezzo("pedone",6,"nero",6,1).
%pezzo("pedone",7,"nero",7,1).

%pezzo("pedone",0,"bianco",0,6).
%pezzo("pedone",1,"bianco",1,6).
%pezzo("pedone",2,"bianco",2,6).
%pezzo("pedone",3,"bianco",3,6).
%pezzo("pedone",4,"bianco",4,4).
%pezzo("pedone",5,"bianco",5,6).
%pezzo("pedone",6,"bianco",6,6).
%pezzo("pedone",7,"bianco",7,6).

%
%pezzo("torre",0,"nero",0,0).
%pezzo("torre",1,"nero",7,0).%

%pezzo("torre",0,"bianco",0,7).
%pezzo("torre",1,"bianco",7,7).

%pezzo("cavallo",0,"nero",1,0).
%pezzo("cavallo",1,"nero",6,0).

%pezzo("cavallo",0,"bianco",1,7).
%pezzo("cavallo",1,"bianco",6,7).

%pezzo("alfiere",0,"nero",2,0).
%pezzo("alfiere",1,"nero",5,0).

%pezzo("alfiere",0,"bianco",2,7).
%pezzo("alfiere",1,"bianco",5,7).

%pezzo("regina",0,"bianco",3,7).

%pezzo("regina",0,"nero",3,0).

%pezzo("re",0,"nero",4,0).
%pezzo("re",0,"bianco",4,7).






%provola
pezzo("re",0,"nero",7,0).
pezzo("regina",0,"nero",4,3).
pezzo("torre",0,"bianco",0,0).
pezzo("alfiere",0,"nero",1,1).
pezzo("regina",0,"bianco",0,2).



focus(N,I,"nero",X,Y)|out(N,I,"nero",X,Y):-pezzo(N,I,"nero",X,Y).
:~#count{N,I: focus(N,I,_,_,_)}!=1. [1@7, 1]
:~focus(N,I,"nero",_,_), #count{X,Y:move(N,I,"nero",X,Y)}<1. [1@7, 2]


aiMove(P,I,C,X,Y)|noMove(P,I,C,X,Y):-move(P,I,C,X,Y).
:~#count{P,I,C,X,Y: aiMove(P,I,C,X,Y)}!=1.  [1@7, 3]

%CALCOLO DEI POSSIBILI OSTACOLI
alleato(X,Y):-out(_,_,"nero",X,Y).
nemico(X,Y):-pezzo(_,_,"bianco",X,Y).
occupata(X,Y):-pezzo(_,_,_,X,Y).



%CALCOLO DELLE MOSSE DEI PEDONI
%move("pedone",I,"nero",X,Y):-focus("pedone",I,"nero",X,Y).
move("pedone",I,"nero",X,Y):-focus("pedone",I,"nero",A,B), Y=B+1, X=A+1, Y<8, X<8, nemico(X,Y).
move("pedone",I,"nero",X,Y):-focus("pedone",I,"nero",A,B), Y=B+1, X=A-1, Y<8, X>=0, nemico(X,Y).
move("pedone",I,"nero",X,Y):-focus("pedone",I,"nero",A,B), Y=B+1, not occupata(X,Y), X=A.
move("pedone",I,"nero",X,3):-focus("pedone",I,"nero",X,1), not occupata(X,2), not occupata(X,3).


%PER CALCOLARMI I MOIMENTI IN BASE AI NEAR, PRIMA VERTICALE E POI ORIZZONTALE
move("torre",I,"nero",X,Y):-focus("torre",I,"nero",X,B), nearV(X,Y), B!=Y.
move("torre",I,"nero",X,Y):-focus("torre",I,"nero",A,Y), nearO(X,Y), A!=X.

%CALCOLO DEI NEAR ORIZZONTALI
nearO(X,Y):-focus("torre",I,"nero",X,Y).
nearO(X,Y):-nearO(A,Y),X=A+1, not nemico(A,Y), not alleato(X,Y), X<8.
nearO(X,Y):-nearO(A,Y),X=A-1, not nemico(A,Y), not alleato(X,Y) ,X>=0.

%CALCOLO DEI NEAR VERTICALI
nearV(X,Y):-focus("torre",I,"nero",X,Y).
nearV(X,Y):-nearV(X,A),Y=A+1, not nemico(X,A) , not alleato(X,Y), Y<8.
nearV(X,Y):-nearV(X,A),Y=A-1, not nemico(X,A) , not alleato(X,Y), Y>=0.


%CALCOLO DEI MOVE DEL CAVALLO
move("cavallo",I,"nero",X,Y):-near(X,Y),focus("cavallo",I,"nero",_,_).

%CALCOLO DEI NEAR DEL CAVALLO
near(X,Y):-focus("cavallo",I,"nero",A,B), not alleato(X,Y), X=A-1,Y=B-2.
near(X,Y):-focus("cavallo",I,"nero",A,B), not alleato(X,Y), X=A+1,Y=B-2.
near(X,Y):-focus("cavallo",I,"nero",A,B), not alleato(X,Y), X=A-1,Y=B+2.
near(X,Y):-focus("cavallo",I,"nero",A,B), not alleato(X,Y), X=A+1,Y=B+2.
near(X,Y):-focus("cavallo",I,"nero",A,B), not alleato(X,Y), X=A-2,Y=B-1.
near(X,Y):-focus("cavallo",I,"nero",A,B), not alleato(X,Y), X=A-2,Y=B+1.
near(X,Y):-focus("cavallo",I,"nero",A,B), not alleato(X,Y), X=A+2,Y=B-1.
near(X,Y):-focus("cavallo",I,"nero",A,B), not alleato(X,Y), X=A+2,Y=B+1.


%CALCOLO DEI MOVE DELL'ALFIERE
move("alfiere",I,"nero",X,Y):-focus("alfiere",I,"nero",A,B), diagonaleP(X,Y), A!=X, B!=Y.
move("alfiere",I,"nero",X,Y):-focus("alfiere",I,"nero",A,B), diagonaleS(X,Y), A!=X, B!=Y.
%CALCOLO DELLA DIAGONALE PRINCIPAE
diagonaleP(X,Y):-focus("alfiere",I,C,X,Y).
diagonaleP(X,Y):-diagonaleP(A,B), not alleato(X,Y), not nemico(A,B), X=A+1, Y=B+1, X<8, Y<8.
diagonaleP(X,Y):-diagonaleP(A,B), not alleato(X,Y), not nemico(A,B), X=A-1, Y=B-1, X>=0, Y>=0.
%CALCOLO DELL DIAGONALE SECONDARIA
diagonaleS(X,Y):-focus("alfiere",I,C,X,Y).
diagonaleS(X,Y):-diagonaleS(A,B), not alleato(X,Y), not nemico(A,B), X=A+1, Y=B-1, X<8, Y>=0.
diagonaleS(X,Y):-diagonaleS(A,B), not alleato(X,Y), not nemico(A,B), X=A-1, Y=B+1, Y<8, X>=0.


%CALCOLO DEI MOVIMENTI DELLA REGINA
move("regina",I,"nero",X,Y):-focus("regina",I,"nero",A,B), nearO(X,Y), A!=X.
move("regina",I,"nero",X,Y):-focus("regina",I,"nero",A,B), nearV(X,Y), B!=Y.
move("regina",I,"nero",X,Y):-focus("regina",I,"nero",A,B), diagonaleP(X,Y), A!=X, B!=Y.
move("regina",I,"nero",X,Y):-focus("regina",I,"nero",A,B), diagonaleS(X,Y), A!=X, B!=Y.
%CALCOLO DEI NEAR DELLA REGINA
nearO(X,Y):-focus("regina",I,"nero",X,Y).
nearO(X,Y):-nearO(A,Y), not alleato(X,Y), not nemico(A,Y), X=A+1, X<8.
nearO(X,Y):-nearO(A,Y), not alleato(X,Y), not nemico(A,Y), X=A-1, X>=0.
%CALCOLO DEI NEAR DELLA REGINA
nearV(X,Y):-focus("regina",I,"nero",X,Y).
nearV(X,Y):-nearV(X,B), not alleato(X,Y), not nemico(X,B), Y=B+1, Y<8.
nearV(X,Y):-nearV(X,B), not alleato(X,Y), not nemico(X,B), Y=B-1, Y>=0.
%CALCOLO DELLA DIAGONALE P DELLA REGINA
diagonaleP(X,Y):-focus("regina",I,"nero",X,Y).
diagonaleP(X,Y):-diagonaleP(A,B), not alleato(X,Y), not nemico(A,B), X=A+1, Y=B+1, X<8, Y<8.
diagonaleP(X,Y):-diagonaleP(A,B), not alleato(X,Y), not nemico(A,B), X=A-1, Y=B-1, X>=0, Y>=0.
%CALCOLO DELLA DIAGONALE S DELLA REGINA
diagonaleS(X,Y):-focus("regina",I,"nero",X,Y).
diagonaleS(X,Y):-diagonaleS(A,B), not alleato(X,Y), not nemico(A,B), X=A+1, Y=B-1, X<8, Y>=0.
diagonaleS(X,Y):-diagonaleS(A,B), not alleato(X,Y), not nemico(A,B), X=A-1, Y=B+1, Y<8, X>=0.

%IL MANGIO DEL PEZZO AL PEZZO
canEat(P,I,"bianco",X,Y):-move(F, K,"nero",X,Y), pezzo(P,I,"bianco",X,Y).
canEat(P,I,"bianco",X,Y):-move(F, K,"nero",X,Y), pezzo(P,I,"bianco",X,Y).

%WEAK CHE NON MANGIO
:~ #count{P,I,X,Y:canEat(P,I,C,X,Y)}=0. [2@6]

%WEAK DEL PEZZO CHE PREFERISCE MANGIARE ROBA FORTE
:~ aiMove(P,I,"nero",X,Y), not nemico(X,Y). [1@6,X,Y]
:~ aiMove(P,I,"nero",X,Y), canEat("pedone",J,"bianco",X,Y). [1@5,X,Y]
:~ aiMove(P,I,"nero",X,Y), canEat("torre",J,"bianco",X,Y). [1@4,X,Y]
:~ aiMove(P,I,"nero",X,Y), canEat("alfiere",J,"bianco",X,Y). [1@4,X,Y]
:~ aiMove(P,I,"nero",X,Y), canEat("cavallo",J,"bianco",X,Y). [1@3,X,Y]
:~ aiMove(P,I,"nero",X,Y), canEat("regina",J,"bianco",X,Y). [1@2,X,Y]
%:~ aiMove(P,I,"nero",X,Y) and scacco [1@1,X,Y]



%CALCOLO CELLA DIFESA, (CHE COMPRENDE ANCHE CHI CI METTE IN SCACCO)

cellaDifesa(X,Y):-aiMove(_,_,_,X,Y), path(X,Y,_).

%:~scaccoRe(_,I,"bianco",_,_), path(A,B,_), noMove(_,_,_,A,B), not pericolo(T,K), focus(_,_,_,T,K). [1@7,A,B]

:~scaccoRe(_,I,"bianco",_,_), aiMove(_,_,_,X,Y), not cellaDifesa(X,Y). [1@7,X,Y]

path(X,Y,8):-scaccoRe("cavallo",I,"bianco",X,Y).
path(X,Y,8):-scaccoRe("pedone",I,"bianco",X,Y).

path(X,Y,D):-cellaAttaccata(X,Y,D).

%CALCOLO PATH 
%croce
path(X,Y,1):-path(X,B,1), not occupata(X,B), Y=B-1, Y>=0.
path(X,Y,5):-path(X,B,5), not occupata(X,B), Y=B+1, Y<8.
path(X,Y,7):-path(B,Y,7), not occupata(B,Y), X=B-1, X>=0.
path(X,Y,3):-path(B,Y,3), not occupata(B,Y), X=B+1, X<8.

%diagonale
path(X,Y,0):-path(A,B,0), not occupata(A,B), X=A-1, Y=B-1, X>=0, Y>=0.
path(X,Y,4):-path(A,B,4), not occupata(A,B), X=A+1, Y=B+1, X<8, Y<8.
path(X,Y,2):-path(A,B,2), not occupata(A,B), X=A+1, Y=B-1, X<8, Y>=0.
path(X,Y,6):-path(A,B,6), not occupata(A,B), X=A-1, Y=B+1, X>=0, Y<8.


%CALCOLO SCACCO AL RE NERO
scaccoRe("cavallo",I,"bianco",X,Y):- pezzo("re",0,"nero",A,B), moveE("cavallo",I,"bianco",A,B), pezzo("cavallo",I,"bianco",X,Y).
scaccoRe("pedone",I,"bianco",A,B):-moveE("pedone",I,"bianco",X,Y), pezzo("re",0,"nero",X,Y), pezzo("pedone",I,"bianco",A,B).


%croce
scaccoRe(P,I,"bianco",X,Y):- path(X,Y,1), pezzo(P, I, "bianco", X,Y).
scaccoRe(P,I,"bianco",X,Y):- path(X,Y,5), pezzo(P, I, "bianco", X,Y).
scaccoRe(P,I,"bianco",X,Y):- path(X,Y,7), pezzo(P, I, "bianco", X,Y).
scaccoRe(P,I,"bianco",X,Y):- path(X,Y,3), pezzo(P, I, "bianco", X,Y).

%diagonale
scaccoRe(P,I,"bianco",X,Y):- path(X,Y,0), pezzo(P, I, "bianco", X,Y).
scaccoRe(P,I,"bianco",X,Y):- path(X,Y,4), pezzo(P, I, "bianco", X,Y).
scaccoRe(P,I,"bianco",X,Y):- path(X,Y,2), pezzo(P, I, "bianco", X,Y).
scaccoRe(P,I,"bianco",X,Y):- path(X,Y,6), pezzo(P, I, "bianco", X,Y).

%CALCOLO PERICOLO RE NERO

%vincoli per pericolo PEDONE
%vincoli per pericolo diagonale p diagonale s
:-pericolo(X,Y), cellaAttaccata(_,_,2), aiMove("pedone",I,"nero",_,_).
:-pericolo(X,Y), cellaAttaccata(_,_,0), aiMove("pedone",I,"nero",_,_).

:-pericolo(X,Y), cellaAttaccata(_,_,4), aiMove("pedone",I,"nero",X,B), B=Y+1, B<8.
:-pericolo(X,Y), cellaAttaccata(_,_,6), aiMove("pedone",I,"nero",X,B), B=Y+1, B<8.
:-pericolo(X,1), cellaAttaccata(_,_,4), aiMove("pedone",I,"nero",X,3).
:-pericolo(X,1), cellaAttaccata(_,_,6), aiMove("pedone",I,"nero",X,3).

:-pericolo(X,Y), cellaAttaccata(_,_,6), aiMove("pedone",I,"nero",A,B), A=X+1, B=Y+1, A>=0, B<8, nemico(A,B).
:-pericolo(X,Y), cellaAttaccata(_,_,4), aiMove("pedone",I,"nero",A,B), A=X-1, B=Y+1, A<8, B<8, nemico(A,B).

%vincoli pericolo cavallo
:-pericolo(_,_), aiMove("cavallo",I,"nero",_,_).

%vincoli pericolo torre
%REGOLE PERICOLO CROCE
:-pericolo(X,Y), cellaAttaccata(_,_,3), aiMove("torre",I,"nero",X,B), Y!=B.
:-pericolo(X,Y), cellaAttaccata(_,_,7), aiMove("torre",I,"nero",X,B), Y!=B.

:-pericolo(X,Y), cellaAttaccata(_,_,1), aiMove("torre",I,"nero",A,Y), X!=A.
:-pericolo(X,Y), cellaAttaccata(_,_,5), aiMove("torre",I,"nero",A,Y), X!=A.

%REGOLE PERICOLO DIAGONALI
:-pericolo(X,Y), cellaAttaccata(_,_,K), aiMove("torre",I,"nero",_,_), K!=3, K!=7, K!=1, K!=5.

%vincoli pericolo alfiere
%REGOLE PERICOLO CROCE
:-pericolo(X,Y), cellaAttaccata(_,_,K), aiMove("alfiere",I,"nero",_,_), K!=0, K!=2, K!=4, K!=6.

%REGOLE PERICOLO DIAGONALI

:-pericolo(X,Y), cellaAttaccata(_,_,0), aiMove("alfiere",I,"nero",A,B), A>X, B<Y.
:-pericolo(X,Y), cellaAttaccata(_,_,0), aiMove("alfiere",I,"nero",A,B), A<X, B>Y.

:-pericolo(X,Y), cellaAttaccata(_,_,4), aiMove("alfiere",I,"nero",A,B), A>X, B<Y.
:-pericolo(X,Y), cellaAttaccata(_,_,4), aiMove("alfiere",I,"nero",A,B), A<X, B>Y.

:-pericolo(X,Y), cellaAttaccata(_,_,2), aiMove("alfiere",I,"nero",A,B), A<X, B<Y.
:-pericolo(X,Y), cellaAttaccata(_,_,2), aiMove("alfiere",I,"nero",A,B), A>X, B>Y.

:-pericolo(X,Y), cellaAttaccata(_,_,6), aiMove("alfiere",I,"nero",A,B), A<X, B<Y.
:-pericolo(X,Y), cellaAttaccata(_,_,6), aiMove("alfiere",I,"nero",A,B), A>X, B>Y.

%vincoli pericolo regina

%%REGOLE PERICOLO CROCE
:-pericolo(X,Y), cellaAttaccata(_,_,K), aiMove("regina",I,"nero",A,Y), A!=X, K!=0, K!=2, K!=3, K!=4, K!=6, K!=7.
:-pericolo(X,Y), cellaAttaccata(_,_,K), aiMove("regina",I,"nero",X,B), B!=Y, K!=0, K!=1, K!=2, K!=4, K!=5, K!=6.
:-pericolo(X,Y), cellaAttaccata(_,_,K), aiMove("regina",I,"nero",A,B), A<X, B<Y, K!=0, K!=2, K!=4, K!=6.
:-pericolo(X,Y), cellaAttaccata(_,_,K), aiMove("regina",I,"nero",A,B), A>X, B<Y, K!=0, K!=2, K!=4, K!=6.
:-pericolo(X,Y), cellaAttaccata(_,_,K), aiMove("regina",I,"nero",A,B), A>X, B>Y, K!=0, K!=2, K!=4, K!=6.
:-pericolo(X,Y), cellaAttaccata(_,_,K), aiMove("regina",I,"nero",A,B), A<X, B>Y, K!=0, K!=2, K!=4, K!=6.


%REGOLE PERICOLO DIAGONALI
:-pericolo(X,Y), cellaAttaccata(_,_,K), aiMove("regina",I,"nero",A,Y), A!=X, K!=1, K!=3, K!=5, K!=7.
:-pericolo(X,Y), cellaAttaccata(_,_,K), aiMove("regina",I,"nero",X,B), B!=Y, K!=1, K!=3, K!=5, K!=7.
:-pericolo(X,Y), cellaAttaccata(_,_,K), aiMove("regina",I,"nero",A,B), A<X, B<Y, K!=0, K!=4.
:-pericolo(X,Y), cellaAttaccata(_,_,K), aiMove("regina",I,"nero",A,B), A>X, B<Y, K!=2, K!=6.
:-pericolo(X,Y), cellaAttaccata(_,_,K), aiMove("regina",I,"nero",A,B), A>X, B>Y, K!=0, K!=4.
:-pericolo(X,Y), cellaAttaccata(_,_,K), aiMove("regina",I,"nero",A,B), A<X, B>Y, K!=2, K!=6.


%croce
pericolo(X,Y):- path(X,Y,1), focus(_, _, _, X,Y).
pericolo(X,Y):- path(X,Y,5), focus(_, _, _, X,Y).
pericolo(X,Y):- path(X,Y,7), focus(_, _, _, X,Y).
pericolo(X,Y):- path(X,Y,3), focus(_, _, _, X,Y).

%diagonali
pericolo(X,Y):- path(X,Y,0), focus(_, _, _, X,Y).
pericolo(X,Y):- path(X,Y,4), focus(_, _, _, X,Y).
pericolo(X,Y):- path(X,Y,2), focus(_, _, _, X,Y).
pericolo(X,Y):- path(X,Y,6), focus(_, _, _, X,Y).


%CALCOLO DELLE CELLE PERICOLOSE DEI PEDONI

moveE("pedone",I,"bianco",X,Y):-pezzo("pedone",I,"bianco",A,B), Y=B-1, X=A+1.
moveE("pedone",I,"bianco",X,Y):-pezzo("pedone",I,"bianco",A,B), Y=B-1, X=A-1.

%CALCOLO DELLE CELLE PERICOLOSE DELLA torre
moveE("torre",I,"bianco",X,Y):-nearVtorre("torre",I,"bianco",X,Y).
moveE("torre",I,"bianco",X,Y):-nearOtorre("torre",I,"bianco",X,Y).


%CALCOLO DEI NEAR ORIZZONTALI
nearOtorre("torre",I,"bianco",X,Y):-pezzo("torre",I,"bianco",X,Y).
nearOtorre("torre",I,"bianco",X,Y):-nearOtorre("torre",I,"bianco",A,Y), X=A+1, not alleato(A,Y),   not nemico(X,Y), X<8.
nearOtorre("torre",I,"bianco",X,Y):-nearOtorre("torre",I,"bianco",A,Y) ,X=A-1, not alleato(A,Y),   not nemico(X,Y) ,X>=0.

cellaAttaccata(X,Y,7):-nearOtorre("torre",I,"bianco",X,Y), pezzo("re",0,"nero",A,Y),A=X+1, A<8.
cellaAttaccata(X,Y,3):-nearOtorre("torre",I,"bianco",X,Y), pezzo("re",0,"nero",A,Y),A=X-1, A>=0.

%CALCOLO DEI NEAR VERTICALI
nearVtorre("torre",I,"bianco",X,Y):-pezzo("torre",I,"bianco",X,Y).
nearVtorre("torre",I,"bianco",X,Y):-nearVtorre("torre",I,"bianco",X,A),Y=A+1, not alleato(X,A), not nemico(X,Y), Y<8.
nearVtorre("torre",I,"bianco",X,Y):-nearVtorre("torre",I,"bianco",X,A),Y=A-1, not alleato(X,A), not nemico(X,Y), Y>=0.

cellaAttaccata(X,Y,1):-nearVtorre("torre",I,"bianco",X,Y), pezzo("re",0,"nero",X,A),A=Y+1, A<8.
cellaAttaccata(X,Y,5):-nearVtorre("torre",I,"bianco",X,Y), pezzo("re",0,"nero",X,A),A=Y-1, A>=0.


%CALCOLO DELLE MOSSE DELL'alfiere
moveE("alfiere",I,"bianco",X,Y):- diagonalealfiereP("alfiere",I,"bianco",X,Y).
moveE("alfiere",I,"bianco",X,Y):- diagonalealfiereS("alfiere",I,"bianco",X,Y).


%DIAGONALE PRINCIPALE
diagonalealfiereP("alfiere",I,"bianco",X,Y):-pezzo("alfiere",I,"bianco",X,Y).
diagonalealfiereP("alfiere",I,"bianco",X,Y):-diagonalealfiereP("alfiere",I,"bianco",A,B), not nemico(X,Y), not alleato(A,B), X=A+1, Y=B+1, X<8, Y<8.
diagonalealfiereP("alfiere",I,"bianco",X,Y):-diagonalealfiereP("alfiere",I,"bianco",A,B), not nemico(X,Y), not alleato(A,B), X=A-1, Y=B-1, X>=0, Y>=0.

cellaAttaccata(X,Y,4):-diagonalealfiereP("alfiere",I,"bianco",X,Y), pezzo("re",0,"nero",A,B),A=X-1, B=Y-1, A>=0, B>=0.
cellaAttaccata(X,Y,0):-diagonalealfiereP("alfiere",I,"bianco",X,Y), pezzo("re",0,"nero",A,B),A=X+1, B=Y+1, A<8, B<8.



%DIAGONALE SECONDARIA
diagonalealfiereS("alfiere",I,"bianco",X,Y):-pezzo("alfiere",I,"bianco",X,Y).
diagonalealfiereS("alfiere",I,"bianco",X,Y):-diagonalealfiereS("alfiere",I,"bianco",A,B), not nemico(X,Y), not alleato(A,B), X=A+1, Y=B-1, X<8, Y>=0.
diagonalealfiereS("alfiere",I,"bianco",X,Y):-diagonalealfiereS("alfiere",I,"bianco",A,B), not nemico(X,Y), not alleato(A,B), X=A-1, Y=B+1, Y<8, X>=0.

cellaAttaccata(X,Y,2):-diagonalealfiereS("alfiere",I,"bianco",X,Y), pezzo("re",0,"nero",A,B),A=X-1, B=Y+1, A>=0, B<8.
cellaAttaccata(X,Y,6):-diagonalealfiereS("alfiere",I,"bianco",X,Y), pezzo("re",0,"nero",A,B),A=X+1, B=Y-1, A<8, B>=0.



%CALCOLO DELLE CELLE PERICOLOSE DEL cavallo
moveE("cavallo",I,"bianco",X,Y):-nearcavallo("cavallo",I,"bianco",X,Y).

%CALCOLO DEI NEAR DEL cavallo
nearcavallo("cavallo",I,"bianco",X,Y):-pezzo("cavallo",I,"bianco",A,B), not nemico(X,Y), X=A-1, Y=B-2, X>=0, Y>=0.
nearcavallo("cavallo",I,"bianco",X,Y):-pezzo("cavallo",I,"bianco",A,B), not nemico(X,Y), X=A+1, Y=B-2, X<8, Y>=0.
nearcavallo("cavallo",I,"bianco",X,Y):-pezzo("cavallo",I,"bianco",A,B), not nemico(X,Y), X=A-1, Y=B+2, X>=0, Y<8.
nearcavallo("cavallo",I,"bianco",X,Y):-pezzo("cavallo",I,"bianco",A,B), not nemico(X,Y), X=A+1, Y=B+2, X<8, Y<8.
nearcavallo("cavallo",I,"bianco",X,Y):-pezzo("cavallo",I,"bianco",A,B), not nemico(X,Y), X=A-2, Y=B-1, X>=0, Y>=0.
nearcavallo("cavallo",I,"bianco",X,Y):-pezzo("cavallo",I,"bianco",A,B), not nemico(X,Y), X=A-2, Y=B+1, X>=0, Y<8.
nearcavallo("cavallo",I,"bianco",X,Y):-pezzo("cavallo",I,"bianco",A,B), not nemico(X,Y), X=A+2, Y=B-1, X<8, Y>=0.
nearcavallo("cavallo",I,"bianco",X,Y):-pezzo("cavallo",I,"bianco",A,B), not nemico(X,Y), X=A+2, Y=B+1, X<8, Y<8.




%CALCOLO DELLE MOSSE DELLA REGINA
moveE("regina",I,"bianco",X,Y):- diagonaleReginaP("regina",I,"bianco",X,Y).
moveE("regina",I,"bianco",X,Y):- diagonaleReginaS("regina",I,"bianco",X,Y).

%DIAGONALE PRINCIPALE REGINA
diagonaleReginaP("regina",I,"bianco",X,Y):-pezzo("regina",I,"bianco",X,Y).
diagonaleReginaP("regina",I,"bianco",X,Y):-diagonaleReginaP("regina",I,"bianco",A,B), not nemico(X,Y), not alleato(A,B), X=A+1, Y=B+1, X<8, Y<8.
diagonaleReginaP("regina",I,"bianco",X,Y):-diagonaleReginaP("regina",I,"bianco",A,B), not nemico(X,Y), not alleato(A,B), X=A-1, Y=B-1, X>=0, Y>=0.

cellaAttaccata(X,Y,4):-diagonaleReginaP("regina",I,"bianco",X,Y), pezzo("re",0,"nero",A,B),A=X-1, B=Y-1, A>=0, B>=0.
cellaAttaccata(X,Y,0):-diagonaleReginaP("regina",I,"bianco",X,Y), pezzo("re",0,"nero",A,B),A=X+1, B=Y+1, A<8, B<8.



%DIAGONALE SECONDARIA REGINA
diagonaleReginaS("regina",I,"bianco",X,Y):-pezzo("regina",I,"bianco",X,Y).
diagonaleReginaS("regina",I,"bianco",X,Y):-diagonaleReginaS("regina",I,"bianco",A,B), not nemico(X,Y), not alleato(A,B), X=A+1, Y=B-1, X<8, Y>=0.
diagonaleReginaS("regina",I,"bianco",X,Y):-diagonaleReginaS("regina",I,"bianco",A,B), not nemico(X,Y), not alleato(A,B), X=A-1, Y=B+1, Y<8, X>=0.

cellaAttaccata(X,Y,2):-diagonaleReginaS("regina",I,"bianco",X,Y), pezzo("re",0,"nero",A,B),A=X-1, B=Y+1, A>=0, B<8.
cellaAttaccata(X,Y,6):-diagonaleReginaS("regina",I,"bianco",X,Y), pezzo("re",0,"nero",A,B),A=X+1, B=Y-1, A<8, B>=0.



%CALCOLO DELLE CELLE PERICOLOSE DELLA REGINA
moveE("regina",I,"bianco",X,Y):-nearVRegina("regina",I,"bianco",X,Y).
moveE("regina",I,"bianco",X,Y):-nearORegina("regina",I,"bianco",X,Y).


%CALCOLO DEI NEAR ORIZZONTALI DELLA REGINA
nearORegina("regina",I,"bianco",X,Y):-pezzo("regina",I,"bianco",X,Y).
nearORegina("regina",I,"bianco",X,Y):-nearORegina("regina",I,"bianco",A,Y), X=A+1, not alleato(A,Y),   not nemico(X,Y), X<8 .
nearORegina("regina",I,"bianco",X,Y):-nearORegina("regina",I,"bianco",A,Y) ,X=A-1, not alleato(A,Y),   not nemico(X,Y) ,X>=0.

cellaAttaccata(X,Y,7):-nearORegina("regina",I,"bianco",X,Y), pezzo("re",0,"nero",A,Y),A=X+1, A<8.
cellaAttaccata(X,Y,3):-nearORegina("regina",I,"bianco",X,Y), pezzo("re",0,"nero",A,Y),A=X-1, A>=0.

%CALCOLO DEI NEAR VERTICALI DELLA REGINA
nearVRegina("regina",I,"bianco",X,Y):-pezzo("regina",I,"bianco",X,Y).
nearVRegina("regina",I,"bianco",X,Y):-nearVRegina("regina",I,"bianco",X,A),Y=A+1, not alleato(X,A), not nemico(X,Y), Y<8.
nearVRegina("regina",I,"bianco",X,Y):-nearVRegina("regina",I,"bianco",X,A),Y=A-1, not alleato(X,A), not nemico(X,Y), Y>=0.

cellaAttaccata(X,Y,1):-nearVRegina("regina",I,"bianco",X,Y), pezzo("re",0,"nero",X,A),A=Y+1, A<8.
cellaAttaccata(X,Y,5):-nearVRegina("regina",I,"bianco",X,Y), pezzo("re",0,"nero",X,A),A=Y-1, A>=0.



