


aiMove(P,I,"nero",X,Y)|out(P,I,"nero",X,Y):-move(P,I,"nero",X,Y).
:~#count{P,I,C,X,Y: aiMove(P,I,C,X,Y)}!=1.  [1@7, 3]

%CALCOLO DEI POSSIBILI OSTACOLI
alleato(X,Y):-pezzo(_,_,"nero",X,Y).
nemico(X,Y):-pezzo(_,_,"bianco",X,Y).
occupata(X,Y):-pezzo(_,_,_,X,Y).
focus(P,I,"nero",X,Y):-aiMove(P,I,"nero",_,_), pezzo(P,I,"nero",X,Y).

%CALCOLO DELLE MOSSE DEI PEDONI
%move("pedone",I,"nero",X,Y):-pezzo("pedone",I,"nero",X,Y).
move("pedone",I,"nero",X,Y):-pezzo("pedone",I,"nero",A,B), Y=B+1, X=A+1, Y<8, X<8, nemico(X,Y).
move("pedone",I,"nero",X,Y):-pezzo("pedone",I,"nero",A,B), Y=B+1, X=A-1, Y<8, X>=0, nemico(X,Y).
move("pedone",I,"nero",X,Y):-pezzo("pedone",I,"nero",A,B), Y=B+1, not occupata(X,Y), X=A, Y<8.
move("pedone",I,"nero",X,3):-pezzo("pedone",I,"nero",X,1), not occupata(X,2), not occupata(X,3).


%PER CALCOLARMI I MOVIMENTI IN BASE AI NEAR, PRIMA VERTICALE E POI ORIZZONTALE
move("torre",I,"nero",X,Y):-pezzo("torre",I,"nero",X,B), nearVtorre("torre",I,"nero",X,Y), B!=Y.
move("torre",I,"nero",X,Y):-pezzo("torre",I,"nero",A,Y), nearOtorre("torre",I,"nero",X,Y), A!=X.

%CALCOLO DEI NEAR ORIZZONTALI
nearOtorre("torre",I,"nero",X,Y):-pezzo("torre",I,"nero",X,Y).
nearOtorre("torre",I,"nero",X,Y):-nearOtorre("torre",I,"nero",A,Y),X=A+1, not nemico(A,Y), not alleato(X,Y), X<8.
nearOtorre("torre",I,"nero",X,Y):-nearOtorre("torre",I,"nero",A,Y), X=A-1, not nemico(A,Y), not alleato(X,Y) ,X>=0.

%CALCOLO DEI NEAR VERTICALI
nearVtorre("torre",I,"nero",X,Y):-pezzo("torre",I,"nero",X,Y).
nearVtorre("torre",I,"nero",X,Y):-nearVtorre("torre",I,"nero",X,A),Y=A+1, not nemico(X,A) , not alleato(X,Y), Y<8.
nearVtorre("torre",I,"nero",X,Y):-nearVtorre("torre",I,"nero",X,A),Y=A-1, not nemico(X,A) , not alleato(X,Y), Y>=0.


%CALCOLO DEI MOVE DEL CAVALLO
move("cavallo",I,"nero",X,Y):-near("cavallo",I,"nero",X,Y),pezzo("cavallo",I,"nero",_,_).

%CALCOLO DEI NEAR DEL CAVALLO
near("cavallo",I,"nero",X,Y):-pezzo("cavallo",I,"nero",A,B), not alleato(X,Y), X=A-1,Y=B-2, X>=0, Y>=0.
near("cavallo",I,"nero",X,Y):-pezzo("cavallo",I,"nero",A,B), not alleato(X,Y), X=A+1,Y=B-2, X<8, Y>=0.
near("cavallo",I,"nero",X,Y):-pezzo("cavallo",I,"nero",A,B), not alleato(X,Y), X=A-1,Y=B+2, X>=0, Y<8.
near("cavallo",I,"nero",X,Y):-pezzo("cavallo",I,"nero",A,B), not alleato(X,Y), X=A+1,Y=B+2, X<8, Y<8.
near("cavallo",I,"nero",X,Y):-pezzo("cavallo",I,"nero",A,B), not alleato(X,Y), X=A-2,Y=B-1, X>=0, Y>=0.
near("cavallo",I,"nero",X,Y):-pezzo("cavallo",I,"nero",A,B), not alleato(X,Y), X=A-2,Y=B+1, X>=0, Y<8.
near("cavallo",I,"nero",X,Y):-pezzo("cavallo",I,"nero",A,B), not alleato(X,Y), X=A+2,Y=B-1, X<8, Y>=0.
near("cavallo",I,"nero",X,Y):-pezzo("cavallo",I,"nero",A,B), not alleato(X,Y), X=A+2,Y=B+1, X<8, Y<8.


%CALCOLO DEI MOVE DELL'ALFIERE
move("alfiere",I,"nero",X,Y):-pezzo("alfiere",I,"nero",A,B), diagonalePalfiere("alfiere",I,"nero",X,Y), A!=X, B!=Y.
move("alfiere",I,"nero",X,Y):-pezzo("alfiere",I,"nero",A,B), diagonaleSalfiere("alfiere",I,"nero",X,Y), A!=X, B!=Y.
%CALCOLO DELLA DIAGONALE PRINCIPAE
diagonalePalfiere("alfiere",I,"nero",X,Y):-pezzo("alfiere",I,"nero",X,Y).
diagonalePalfiere("alfiere",I,"nero",X,Y):-diagonalePalfiere("alfiere",I,"nero",A,B), not alleato(X,Y), not nemico(A,B), X=A+1, Y=B+1, X<8, Y<8.
diagonalePalfiere("alfiere",I,"nero",X,Y):-diagonalePalfiere("alfiere",I,"nero",A,B), not alleato(X,Y), not nemico(A,B), X=A-1, Y=B-1, X>=0, Y>=0.
%CALCOLO DELL DIAGONALE SECONDARIA
diagonaleSalfiere("alfiere",I,"nero",X,Y):-pezzo("alfiere",I,"nero",X,Y).
diagonaleSalfiere("alfiere",I,"nero",X,Y):-diagonaleSalfiere("alfiere",I,"nero",A,B), not alleato(X,Y), not nemico(A,B), X=A+1, Y=B-1, X<8, Y>=0.
diagonaleSalfiere("alfiere",I,"nero",X,Y):-diagonaleSalfiere("alfiere",I,"nero",A,B), not alleato(X,Y), not nemico(A,B), X=A-1, Y=B+1, Y<8, X>=0.


%CALCOLO DEI MOVIMENTI DELLA REGINA
move("regina",I,"nero",X,Y):-pezzo("regina",I,"nero",A,B), nearOregina("regina",I,"nero",X,Y), A!=X.
move("regina",I,"nero",X,Y):-pezzo("regina",I,"nero",A,B), nearVregina("regina",I,"nero",X,Y), B!=Y.
move("regina",I,"nero",X,Y):-pezzo("regina",I,"nero",A,B), diagonalePregina("regina",I,"nero",X,Y), A!=X, B!=Y.
move("regina",I,"nero",X,Y):-pezzo("regina",I,"nero",A,B), diagonaleSregina("regina",I,"nero",X,Y), A!=X, B!=Y.
%CALCOLO DEI NEAR DELLA REGINA
nearOregina("regina",I,"nero",X,Y):-pezzo("regina",I,"nero",X,Y).
nearOregina("regina",I,"nero",X,Y):-nearOregina("regina",I,"nero",A,Y), not alleato(X,Y), not nemico(A,Y), X=A+1, X<8.
nearOregina("regina",I,"nero",X,Y):-nearOregina("regina",I,"nero",A,Y), not alleato(X,Y), not nemico(A,Y), X=A-1, X>=0.
%CALCOLO DEI NEAR DELLA REGINA
nearVregina("regina",I,"nero",X,Y):-pezzo("regina",I,"nero",X,Y).
nearVregina("regina",I,"nero",X,Y):-nearVregina("regina",I,"nero",X,B), not alleato(X,Y), not nemico(X,B), Y=B+1, Y<8.
nearVregina("regina",I,"nero",X,Y):-nearVregina("regina",I,"nero",X,B), not alleato(X,Y), not nemico(X,B), Y=B-1, Y>=0.
%CALCOLO DELLA DIAGONALE P DELLA REGINA
diagonalePregina("regina",I,"nero",X,Y):-pezzo("regina",I,"nero",X,Y).
diagonalePregina("regina",I,"nero",X,Y):-diagonalePregina("regina",I,"nero",A,B), not alleato(X,Y), not nemico(A,B), X=A+1, Y=B+1, X<8, Y<8.
diagonalePregina("regina",I,"nero",X,Y):-diagonalePregina("regina",I,"nero",A,B), not alleato(X,Y), not nemico(A,B), X=A-1, Y=B-1, X>=0, Y>=0.
%CALCOLO DELLA DIAGONALE S DELLA REGINA
diagonaleSregina("regina",I,"nero",X,Y):-pezzo("regina",I,"nero",X,Y).
diagonaleSregina("regina",I,"nero",X,Y):-diagonaleSregina("regina",I,"nero",A,B), not alleato(X,Y), not nemico(A,B), X=A+1, Y=B-1, X<8, Y>=0.
diagonaleSregina("regina",I,"nero",X,Y):-diagonaleSregina("regina",I,"nero",A,B), not alleato(X,Y), not nemico(A,B), X=A-1, Y=B+1, Y<8, X>=0.

%MOVIMENTO RE (VIP)
move("re",I,"nero",X,Y):- pezzo("re",I,"nero",A,B), not alleato(X,Y), not danger(X,Y), X=A-1, Y=B-1, X>=0, Y>=0.
move("re",I,"nero",X,Y):- pezzo("re",I,"nero",A,B), not alleato(X,Y), not danger(X,Y), X=A-1, Y=B, X>=0.
move("re",I,"nero",X,Y):- pezzo("re",I,"nero",A,B), not alleato(X,Y), not danger(X,Y), X=A-1, Y=B+1, X>=0, Y<8.
move("re",I,"nero",X,Y):- pezzo("re",I,"nero",A,B), not alleato(X,Y), not danger(X,Y), X=A, Y=B-1, Y>=0.
move("re",I,"nero",X,Y):- pezzo("re",I,"nero",A,B), not alleato(X,Y), not danger(X,Y), X=A, Y=B+1, Y<8.
move("re",I,"nero",X,Y):- pezzo("re",I,"nero",A,B), not alleato(X,Y), not danger(X,Y), X=A+1, Y=B-1, X<8, Y>=0.
move("re",I,"nero",X,Y):- pezzo("re",I,"nero",A,B), not alleato(X,Y), not danger(X,Y), X=A+1, Y=B, X<8.
move("re",I,"nero",X,Y):- pezzo("re",I,"nero",A,B), not alleato(X,Y), not danger(X,Y), X=A+1, Y=B+1, X<8, Y<8.

danger(X,Y):-moveE(P,I,C,X,Y).














alleatoPericolo(X,Y):-not focus(P,I,"nero",X,Y), pezzo(P,I,"nero",X,Y).

%CALCOLO DELLE CELLE PERICOLOSE DEI PEDONI

moveE("pedone",I,"bianco",X,Y):-pezzo("pedone",I,"bianco",A,B), Y=B-1, X=A+1, Y>=0, X<8.
moveE("pedone",I,"bianco",X,Y):-pezzo("pedone",I,"bianco",A,B), Y=B-1, X=A-1, Y>=0, X>=0.

%CALCOLO DELLE CELLE PERICOLOSE DELLA torre
moveE("torre",I,"bianco",X,B):-nearVtorre("torre",I,"bianco",X,B), pezzo("torre",I,"bianco",X,Y), B!=Y.
moveE("torre",I,"bianco",A,Y):-nearOtorre("torre",I,"bianco",A,Y), pezzo("torre",I,"bianco",X,Y), A!=X.

moveE("torre",I,"bianco",X,Y):-nearOtorre("torre",I,"bianco",A,Y), X=A+1, X<8, nemico(X,Y), not pezzo("torre",I,"bianco",X,Y).
moveE("torre",I,"bianco",X,Y):-nearOtorre("torre",I,"bianco",A,Y), X=A-1, X>=0, nemico(X,Y), not pezzo("torre",I,"bianco",X,Y).
moveE("torre",I,"bianco",X,Y):-nearVtorre("torre",I,"bianco",X,B), Y=B+1, Y<8, nemico(X,Y), not pezzo("torre",I,"bianco",X,Y).
moveE("torre",I,"bianco",X,Y):-nearVtorre("torre",I,"bianco",X,B), Y=B-1, Y>=0, nemico(X,Y), not pezzo("torre",I,"bianco",X,Y).

%CALCOLO DEI NEAR ORIZZONTALI
nearOtorre("torre",I,"bianco",X,Y):-pezzo("torre",I,"bianco",X,Y).
nearOtorre("torre",I,"bianco",X,Y):-nearOtorre("torre",I,"bianco",A,Y), X=A+1, not alleatoPericolo(A,Y),   not nemico(X,Y), X<8.
nearOtorre("torre",I,"bianco",X,Y):-nearOtorre("torre",I,"bianco",A,Y), X=A-1, not alleatoPericolo(A,Y),   not nemico(X,Y) ,X>=0. 

cellaAttaccata(X,Y,7):-nearOtorre("torre",I,"bianco",X,Y), pezzo("re",0,"nero",A,Y),A=X+1, A<8.
cellaAttaccata(X,Y,3):-nearOtorre("torre",I,"bianco",X,Y), pezzo("re",0,"nero",A,Y),A=X-1, A>=0.

%CALCOLO DEI NEAR VERTICALI
nearVtorre("torre",I,"bianco",X,Y):-pezzo("torre",I,"bianco",X,Y).
nearVtorre("torre",I,"bianco",X,Y):-nearVtorre("torre",I,"bianco",X,A),Y=A+1, not alleatoPericolo(X,A), not nemico(X,Y), Y<8.
nearVtorre("torre",I,"bianco",X,Y):-nearVtorre("torre",I,"bianco",X,A),Y=A-1, not alleatoPericolo(X,A), not nemico(X,Y), Y>=0.

cellaAttaccata(X,Y,1):-nearVtorre("torre",I,"bianco",X,Y), pezzo("re",0,"nero",X,A),A=Y+1, A<8.
cellaAttaccata(X,Y,5):-nearVtorre("torre",I,"bianco",X,Y), pezzo("re",0,"nero",X,A),A=Y-1, A>=0.


%CALCOLO DELLE MOSSE DELL'alfiere
moveE("alfiere",I,"bianco",A,B):- diagonalealfiereP("alfiere",I,"bianco",A,B), pezzo("alfiere",I,"bianco",X,Y), A!=X, B!=Y.
moveE("alfiere",I,"bianco",A,B):- diagonalealfiereS("alfiere",I,"bianco",A,B), pezzo("alfiere",I,"bianco",X,Y), A!=X, B!=Y.

moveE("alfiere",I,"bianco",X,Y):- diagonalealfiereP("alfiere",I,"bianco",A,B), X=A-1, Y=B-1, X>=0, Y>=0, nemico(X,Y), not pezzo("alfiere",I,"bianco",X,Y).
moveE("alfiere",I,"bianco",X,Y):- diagonalealfiereP("alfiere",I,"bianco",A,B), X=A+1, Y=B+1, X<8, Y<8, nemico(X,Y), not pezzo("alfiere",I,"bianco",X,Y).
moveE("alfiere",I,"bianco",X,Y):- diagonalealfiereS("alfiere",I,"bianco",A,B), X=A+1, Y=B-1, X<8, Y>=0, nemico(X,Y), not pezzo("alfiere",I,"bianco",X,Y).
moveE("alfiere",I,"bianco",X,Y):- diagonalealfiereS("alfiere",I,"bianco",A,B), X=A-1, Y=B+1, X>=0, Y<8, nemico(X,Y), not pezzo("alfiere",I,"bianco",X,Y).


%DIAGONALE PRINCIPALE
diagonalealfiereP("alfiere",I,"bianco",X,Y):-pezzo("alfiere",I,"bianco",X,Y).
diagonalealfiereP("alfiere",I,"bianco",X,Y):-diagonalealfiereP("alfiere",I,"bianco",A,B), not nemico(X,Y), not alleatoPericolo(A,B), X=A+1, Y=B+1, X<8, Y<8.
diagonalealfiereP("alfiere",I,"bianco",X,Y):-diagonalealfiereP("alfiere",I,"bianco",A,B), not nemico(X,Y), not alleatoPericolo(A,B), X=A-1, Y=B-1, X>=0, Y>=0.
cellaAttaccata(X,Y,4):-diagonalealfiereP("alfiere",I,"bianco",X,Y), pezzo("re",0,"nero",A,B),A=X-1, B=Y-1, A>=0, B>=0.
cellaAttaccata(X,Y,0):-diagonalealfiereP("alfiere",I,"bianco",X,Y), pezzo("re",0,"nero",A,B),A=X+1, B=Y+1, A<8, B<8.



%DIAGONALE SECONDARIA
diagonalealfiereS("alfiere",I,"bianco",X,Y):-pezzo("alfiere",I,"bianco",X,Y).
diagonalealfiereS("alfiere",I,"bianco",X,Y):-diagonalealfiereS("alfiere",I,"bianco",A,B), not nemico(X,Y), not alleatoPericolo(A,B), X=A+1, Y=B-1, X<8, Y>=0.
diagonalealfiereS("alfiere",I,"bianco",X,Y):-diagonalealfiereS("alfiere",I,"bianco",A,B), not nemico(X,Y), not alleatoPericolo(A,B), X=A-1, Y=B+1, Y<8, X>=0.

cellaAttaccata(X,Y,2):-diagonalealfiereS("alfiere",I,"bianco",X,Y), pezzo("re",0,"nero",A,B),A=X-1, B=Y+1, A>=0, B<8.
cellaAttaccata(X,Y,6):-diagonalealfiereS("alfiere",I,"bianco",X,Y), pezzo("re",0,"nero",A,B),A=X+1, B=Y-1, A<8, B>=0.



%CALCOLO DELLE CELLE PERICOLOSE DEL cavallo
moveE("cavallo",I,"bianco",X,Y):-nearcavallo("cavallo",I,"bianco",X,Y).

%CALCOLO DEI NEAR DEL cavallo
nearcavallo("cavallo",I,"bianco",X,Y):-pezzo("cavallo",I,"bianco",A,B), X=A-1, Y=B-2, X>=0, Y>=0.
nearcavallo("cavallo",I,"bianco",X,Y):-pezzo("cavallo",I,"bianco",A,B), X=A+1, Y=B-2, X<8, Y>=0.
nearcavallo("cavallo",I,"bianco",X,Y):-pezzo("cavallo",I,"bianco",A,B), X=A-1, Y=B+2, X>=0, Y<8.
nearcavallo("cavallo",I,"bianco",X,Y):-pezzo("cavallo",I,"bianco",A,B), X=A+1, Y=B+2, X<8, Y<8.
nearcavallo("cavallo",I,"bianco",X,Y):-pezzo("cavallo",I,"bianco",A,B), X=A-2, Y=B-1, X>=0, Y>=0.
nearcavallo("cavallo",I,"bianco",X,Y):-pezzo("cavallo",I,"bianco",A,B), X=A-2, Y=B+1, X>=0, Y<8.
nearcavallo("cavallo",I,"bianco",X,Y):-pezzo("cavallo",I,"bianco",A,B), X=A+2, Y=B-1, X<8, Y>=0.
nearcavallo("cavallo",I,"bianco",X,Y):-pezzo("cavallo",I,"bianco",A,B), X=A+2, Y=B+1, X<8, Y<8.




%CALCOLO DELLE MOSSE DELLA REGINA
moveE("regina",I,"bianco",A,B):- diagonaleReginaP("regina",I,"bianco",A,B), pezzo("regina",I,"bianco",X,Y), A!=X, B!=Y.
moveE("regina",I,"bianco",A,B):- diagonaleReginaS("regina",I,"bianco",A,B), pezzo("regina",I,"bianco",X,Y), A!=X, B!=Y.

moveE("regina",I,"bianco",X,Y):- diagonaleReginaP("regina",I,"bianco",A,B), X=A-1, Y=B-1, X>=0, Y>=0, nemico(X,Y), not pezzo("regina",I,"bianco",X,Y).
moveE("regina",I,"bianco",X,Y):- diagonaleReginaP("regina",I,"bianco",A,B), X=A+1, Y=B+1, X<8, Y<8, nemico(X,Y), not pezzo("regina",I,"bianco",X,Y).
moveE("regina",I,"bianco",X,Y):- diagonaleReginaS("regina",I,"bianco",A,B), X=A+1, Y=B-1, X<8, Y>=0, nemico(X,Y), not pezzo("regina",I,"bianco",X,Y).
moveE("regina",I,"bianco",X,Y):- diagonaleReginaS("regina",I,"bianco",A,B), X=A-1, Y=B+1, X>=0, Y<8, nemico(X,Y), not pezzo("regina",I,"bianco",X,Y).


%DIAGONALE PRINCIPALE REGINA
diagonaleReginaP("regina",I,"bianco",X,Y):-pezzo("regina",I,"bianco",X,Y).
diagonaleReginaP("regina",I,"bianco",X,Y):-diagonaleReginaP("regina",I,"bianco",A,B), not nemico(X,Y), not alleatoPericolo(A,B), X=A+1, Y=B+1, X<8, Y<8.
diagonaleReginaP("regina",I,"bianco",X,Y):-diagonaleReginaP("regina",I,"bianco",A,B), not nemico(X,Y), not alleatoPericolo(A,B), X=A-1, Y=B-1, X>=0, Y>=0.

cellaAttaccata(X,Y,4):-diagonaleReginaP("regina",I,"bianco",X,Y), pezzo("re",0,"nero",A,B),A=X-1, B=Y-1, A>=0, B>=0.
cellaAttaccata(X,Y,0):-diagonaleReginaP("regina",I,"bianco",X,Y), pezzo("re",0,"nero",A,B),A=X+1, B=Y+1, A<8, B<8.



%DIAGONALE SECONDARIA REGINA
diagonaleReginaS("regina",I,"bianco",X,Y):-pezzo("regina",I,"bianco",X,Y).
diagonaleReginaS("regina",I,"bianco",X,Y):-diagonaleReginaS("regina",I,"bianco",A,B), not nemico(X,Y), not alleatoPericolo(A,B), X=A+1, Y=B-1, X<8, Y>=0.
diagonaleReginaS("regina",I,"bianco",X,Y):-diagonaleReginaS("regina",I,"bianco",A,B), not nemico(X,Y), not alleatoPericolo(A,B), X=A-1, Y=B+1, Y<8, X>=0.

cellaAttaccata(X,Y,2):-diagonaleReginaS("regina",I,"bianco",X,Y), pezzo("re",0,"nero",A,B),A=X-1, B=Y+1, A>=0, B<8.
cellaAttaccata(X,Y,6):-diagonaleReginaS("regina",I,"bianco",X,Y), pezzo("re",0,"nero",A,B),A=X+1, B=Y-1, A<8, B>=0.



%CALCOLO DELLE CELLE PERICOLOSE DELLA REGINA
moveE("regina",I,"bianco",X,B):-nearVRegina("regina",I,"bianco",X,B), pezzo("regina",I,"bianco",X,Y), Y!=B.
moveE("regina",I,"bianco",A,Y):-nearORegina("regina",I,"bianco",A,Y), pezzo("regina",I,"bianco",X,Y), X!=A.
					                 
moveE("regina",I,"bianco",X,Y):-nearORegina("regina",I,"bianco",A,Y), X=A+1, X<8, nemico(X,Y), not pezzo("regina",I,"bianco",X,Y).
moveE("regina",I,"bianco",X,Y):-nearORegina("regina",I,"bianco",A,Y), X=A-1, X>=0, nemico(X,Y), not pezzo("regina",I,"bianco",X,Y).
moveE("regina",I,"bianco",X,Y):-nearVRegina("regina",I,"bianco",X,B), Y=B+1, Y<8, nemico(X,Y), not pezzo("regina",I,"bianco",X,Y).
moveE("regina",I,"bianco",X,Y):-nearVRegina("regina",I,"bianco",X,B), Y=B-1, Y>=0, nemico(X,Y), not pezzo("regina",I,"bianco",X,Y).


%CALCOLO DEI NEAR ORIZZONTALI DELLA REGINA
nearORegina("regina",I,"bianco",X,Y):-pezzo("regina",I,"bianco",X,Y).
nearORegina("regina",I,"bianco",X,Y):-nearORegina("regina",I,"bianco",A,Y), X=A+1, not alleatoPericolo(A,Y),   not nemico(X,Y), X<8 .
nearORegina("regina",I,"bianco",X,Y):-nearORegina("regina",I,"bianco",A,Y) ,X=A-1, not alleatoPericolo(A,Y),   not nemico(X,Y) ,X>=0.

cellaAttaccata(X,Y,7):-nearORegina("regina",I,"bianco",X,Y), pezzo("re",0,"nero",A,Y),A=X+1, A<8.
cellaAttaccata(X,Y,3):-nearORegina("regina",I,"bianco",X,Y), pezzo("re",0,"nero",A,Y),A=X-1, A>=0.

%CALCOLO DEI NEAR VERTICALI DELLA REGINA
nearVRegina("regina",I,"bianco",X,Y):-pezzo("regina",I,"bianco",X,Y).
nearVRegina("regina",I,"bianco",X,Y):-nearVRegina("regina",I,"bianco",X,A),Y=A+1, not alleatoPericolo(X,A), not nemico(X,Y), Y<8.
nearVRegina("regina",I,"bianco",X,Y):-nearVRegina("regina",I,"bianco",X,A),Y=A-1, not alleatoPericolo(X,A), not nemico(X,Y), Y>=0.

cellaAttaccata(X,Y,1):-nearVRegina("regina",I,"bianco",X,Y), pezzo("re",0,"nero",X,A),A=Y+1, A<8.
cellaAttaccata(X,Y,5):-nearVRegina("regina",I,"bianco",X,Y), pezzo("re",0,"nero",X,A),A=Y-1, A>=0.

moveE("re",I,"bianco",X,Y):- pezzo("re",I,"bianco",A,B), X=A-1, Y=B-1, X>=0, Y>=0.
moveE("re",I,"bianco",X,Y):- pezzo("re",I,"bianco",A,B), X=A-1, Y=B, X>=0.
moveE("re",I,"bianco",X,Y):- pezzo("re",I,"bianco",A,B), X=A-1, Y=B+1, X>=0, Y<8.
moveE("re",I,"bianco",X,Y):- pezzo("re",I,"bianco",A,B), X=A, Y=B-1, Y>=0.
moveE("re",I,"bianco",X,Y):- pezzo("re",I,"bianco",A,B), X=A, Y=B+1, Y<8.
moveE("re",I,"bianco",X,Y):- pezzo("re",I,"bianco",A,B), X=A+1, Y=B-1, X<8, Y>=0.
moveE("re",I,"bianco",X,Y):- pezzo("re",I,"bianco",A,B), X=A+1, Y=B, X<8.
moveE("re",I,"bianco",X,Y):- pezzo("re",I,"bianco",A,B), X=A+1, Y=B+1, X<8, Y<8.










%NEWMOVE E SCACCO AL RE NEMICO (BIANCO)
%CALCOLO DELLE MOSSE DEI PEDONI
newMove("pedone",I,"nero",X,Y):-aiMove("pedone",I,"nero",A,B), Y=B+1, X=A+1, Y<8, X<8, nemico(X,Y).
newMove("pedone",I,"nero",X,Y):-aiMove("pedone",I,"nero",A,B), Y=B+1, X=A-1, Y<8, X>=0, nemico(X,Y).


%PER CALCOLARMI I MOIMENTI IN BASE AI NEAR, PRIMA VERTICALE E POI ORIZZONTALE
newMove("torre",I,"nero",X,Y):-aiMove("torre",I,"nero",X,B), newNearV(X,Y), B!=Y.
newMove("torre",I,"nero",X,Y):-aiMove("torre",I,"nero",A,Y), newNearO(X,Y), A!=X.

%CALCOLO DEI NEAR ORIZZONTALI
newNearO(A,Y):-aiMove("torre",I,"nero",X,Y), A=X+1, A<8.
newNearO(A,Y):-aiMove("torre",I,"nero",X,Y), A=X-1, A>=0.
newNearO(X,Y):-newNearO(A,Y),X=A+1, not nemico(A,Y), not alleatoPericolo(X,Y), X<8.
newNearO(X,Y):-newNearO(A,Y),X=A-1, not nemico(A,Y), not alleatoPericolo(X,Y) ,X>=0.

%CALCOLO DEI NEAR VERTICALI
newNearV(X,B):-aiMove("torre",I,"nero",X,Y), B=Y-1, B>=0.
newNearV(X,B):-aiMove("torre",I,"nero",X,Y), B=Y+1, B<8.
newNearV(X,Y):-newNearV(X,A),Y=A+1, not nemico(X,A) , not alleatoPericolo(X,Y), Y<8.
newNearV(X,Y):-newNearV(X,A),Y=A-1, not nemico(X,A) , not alleatoPericolo(X,Y), Y>=0.


%CALCOLO DEI MOVE DEL CAVALLO
newMove("cavallo",I,"nero",X,Y):-newNear(X,Y),aiMove("cavallo",I,"nero",_,_).

%CALCOLO DEI NEAR DEL CAVALLO
newNear(X,Y):-aiMove("cavallo",I,"nero",A,B), not alleatoPericolo(X,Y), X=A-1,Y=B-2, X>=0, Y>=0.
newNear(X,Y):-aiMove("cavallo",I,"nero",A,B), not alleatoPericolo(X,Y), X=A+1,Y=B-2, X<8, Y>=0.
newNear(X,Y):-aiMove("cavallo",I,"nero",A,B), not alleatoPericolo(X,Y), X=A-1,Y=B+2, X>=0, Y<8.
newNear(X,Y):-aiMove("cavallo",I,"nero",A,B), not alleatoPericolo(X,Y), X=A+1,Y=B+2, X<8, Y<8.
newNear(X,Y):-aiMove("cavallo",I,"nero",A,B), not alleatoPericolo(X,Y), X=A-2,Y=B-1, X>=0, Y>=0.
newNear(X,Y):-aiMove("cavallo",I,"nero",A,B), not alleatoPericolo(X,Y), X=A-2,Y=B+1, X>=0, Y<8.
newNear(X,Y):-aiMove("cavallo",I,"nero",A,B), not alleatoPericolo(X,Y), X=A+2,Y=B-1, X<8, Y>=0.
newNear(X,Y):-aiMove("cavallo",I,"nero",A,B), not alleatoPericolo(X,Y), X=A+2,Y=B+1, X<8, Y<8.


%CALCOLO DEI MOVE DELL'ALFIERE
newMove("alfiere",I,"nero",X,Y):-aiMove("alfiere",I,"nero",A,B), newDiagonaleP(X,Y), A!=X, B!=Y.
newMove("alfiere",I,"nero",X,Y):-aiMove("alfiere",I,"nero",A,B), newDiagonaleS(X,Y), A!=X, B!=Y.
%CALCOLO DELLA DIAGONALE PRINCIPAE
newDiagonaleP(A,B):-aiMove("alfiere",I,"nero",X,Y), A=X-1, B=Y-1, A>=0, B>=0.
newDiagonaleP(A,B):-aiMove("alfiere",I,"nero",X,Y), A=X+1, B=Y+1, A<8, B<8.
newDiagonaleP(X,Y):-newDiagonaleP(A,B), not alleatoPericolo(X,Y), not nemico(A,B), X=A+1, Y=B+1, X<8, Y<8.
newDiagonaleP(X,Y):-newDiagonaleP(A,B), not alleatoPericolo(X,Y), not nemico(A,B), X=A-1, Y=B-1, X>=0, Y>=0.
%CALCOLO DELL DIAGONALE SECONDARIA
newDiagonaleS(A,B):-aiMove("alfiere",I,"nero",X,Y), A=X+1, B=Y-1, A<8, B>=0.
newDiagonaleS(A,B):-aiMove("alfiere",I,"nero",X,Y), A=X-1, B=Y+1, A>=0, B<8.
newDiagonaleS(X,Y):-newDiagonaleS(A,B), not alleatoPericolo(X,Y), not nemico(A,B), X=A+1, Y=B-1, X<8, Y>=0.
newDiagonaleS(X,Y):-newDiagonaleS(A,B), not alleatoPericolo(X,Y), not nemico(A,B), X=A-1, Y=B+1, Y<8, X>=0.


%CALCOLO DEI MOVIMENTI DELLA REGINA
newMove("regina",I,"nero",X,Y):-aiMove("regina",I,"nero",A,B), newNearO(X,Y), A!=X.
newMove("regina",I,"nero",X,Y):-aiMove("regina",I,"nero",A,B), newNearV(X,Y), B!=Y.
newMove("regina",I,"nero",X,Y):-aiMove("regina",I,"nero",A,B), newDiagonaleP(X,Y), A!=X, B!=Y.
newMove("regina",I,"nero",X,Y):-aiMove("regina",I,"nero",A,B), newDiagonaleS(X,Y), A!=X, B!=Y.
%CALCOLO DEI NEAR DELLA REGINA
newNearO(A,Y):-aiMove("regina",I,"nero",X,Y), A=X-1, A>=0.
newNearO(A,Y):-aiMove("regina",I,"nero",X,Y), A=X+1, A<8.
newNearO(X,Y):-newNearO(A,Y), not alleatoPericolo(X,Y), not nemico(A,Y), X=A+1, X<8.
newNearO(X,Y):-newNearO(A,Y), not alleatoPericolo(X,Y), not nemico(A,Y), X=A-1, X>=0.
%CALCOLO DEI NEAR DELLA REGINA
newNearV(X,B):-aiMove("regina",I,"nero",X,Y), B=Y-1, B>=0.
newNearV(X,B):-aiMove("regina",I,"nero",X,Y), B=Y+1, B<8.
newNearV(X,Y):-newNearV(X,B), not alleatoPericolo(X,Y), not nemico(X,B), Y=B+1, Y<8.
newNearV(X,Y):-newNearV(X,B), not alleatoPericolo(X,Y), not nemico(X,B), Y=B-1, Y>=0.
%CALCOLO DELLA DIAGONALE P DELLA REGINA
newDiagonaleP(A,B):-aiMove("regina",I,"nero",X,Y), A=X-1, B=Y-1, A>=0, B>=0.
newDiagonaleP(A,B):-aiMove("regina",I,"nero",X,Y), A=X+1, B=Y+1, A<8, B<8.
newDiagonaleP(X,Y):-newDiagonaleP(A,B), not alleatoPericolo(X,Y), not nemico(A,B), X=A+1, Y=B+1, X<8, Y<8.
newDiagonaleP(X,Y):-newDiagonaleP(A,B), not alleatoPericolo(X,Y), not nemico(A,B), X=A-1, Y=B-1, X>=0, Y>=0.
%CALCOLO DELLA DIAGONALE S DELLA REGINA
newDiagonaleS(A,B):-aiMove("regina",I,"nero",X,Y), A=X-1, B=Y+1, A>=0, B<8.
newDiagonaleS(A,B):-aiMove("regina",I,"nero",X,Y), A=X+1, B=Y-1, A<8, B>=0.
newDiagonaleS(X,Y):-newDiagonaleS(A,B), not alleatoPericolo(X,Y), not nemico(A,B), X=A+1, Y=B-1, X<8, Y>=0.
newDiagonaleS(X,Y):-newDiagonaleS(A,B), not alleatoPericolo(X,Y), not nemico(A,B), X=A-1, Y=B+1, Y<8, X>=0.


newMove("re",I,"nero",X,Y):- pezzo("re",I,"nero",A,B), not alleatoPericolo(X,Y), not danger(X,Y), X=A-1, Y=B-1, X>=0, Y>=0.
newMove("re",I,"nero",X,Y):- pezzo("re",I,"nero",A,B), not alleatoPericolo(X,Y), not danger(X,Y), X=A-1, Y=B, X>=0.
newMove("re",I,"nero",X,Y):- pezzo("re",I,"nero",A,B), not alleatoPericolo(X,Y), not danger(X,Y), X=A-1, Y=B+1, X>=0, Y<8.
newMove("re",I,"nero",X,Y):- pezzo("re",I,"nero",A,B), not alleatoPericolo(X,Y), not danger(X,Y), X=A, Y=B-1, Y>=0.
newMove("re",I,"nero",X,Y):- pezzo("re",I,"nero",A,B), not alleatoPericolo(X,Y), not danger(X,Y), X=A, Y=B+1, Y<8.
newMove("re",I,"nero",X,Y):- pezzo("re",I,"nero",A,B), not alleatoPericolo(X,Y), not danger(X,Y), X=A+1, Y=B-1, X<8, Y>=0.
newMove("re",I,"nero",X,Y):- pezzo("re",I,"nero",A,B), not alleatoPericolo(X,Y), not danger(X,Y), X=A+1, Y=B, X<8.
newMove("re",I,"nero",X,Y):- pezzo("re",I,"nero",A,B), not alleatoPericolo(X,Y), not danger(X,Y), X=A+1, Y=B+1, X<8, Y<8.

scaccoReBianco(X,Y):-newMove(_,_,_,X,Y), pezzo("re",I,"bianco",X,Y).




%vincoli

%CALCOLO CELLA DIFESA, (CHE COMPRENDE ANCHE CHI CI METTE IN SCACCO)

cellaDifesa(X,Y):-aiMove(_,_,_,X,Y), path(X,Y,_).

:~scaccoRe(_,I,"bianco",_,_),focus(P,_,_,_,_), aiMove(_,_,_,X,Y), not cellaDifesa(X,Y), P!="re". [1@7,X,Y]

path(X,Y,8):-scaccoRe("cavallo",I,"bianco",X,Y).
path(X,Y,8):-scaccoRe("pedone",I,"bianco",X,Y).

path(X,Y,D):-cellaAttaccata(X,Y,D).

%CALCOLO PATH 
%croce
path(X,Y,1):-path(X,B,1), not occupata(X,B), Y=B-1, Y>=0.
path(X,Y,5):-path(X,B,5), not occupata(X,B), Y=B+1, Y<8.
path(X,Y,7):-path(B,Y,7), not occupata(B,Y), X=B-1, X>=0.
path(X,Y,3):-path(B,Y,3), not occupata(B,Y), X=B+1, X<8.

%diagonale
path(X,Y,0):-path(A,B,0), not occupata(A,B), X=A-1, Y=B-1, X>=0, Y>=0.
path(X,Y,4):-path(A,B,4), not occupata(A,B), X=A+1, Y=B+1, X<8, Y<8.
path(X,Y,2):-path(A,B,2), not occupata(A,B), X=A+1, Y=B-1, X<8, Y>=0.
path(X,Y,6):-path(A,B,6), not occupata(A,B), X=A-1, Y=B+1, X>=0, Y<8.


%CALCOLO SCACCO AL RE NERO
scaccoRe("cavallo",I,"bianco",X,Y):- pezzo("re",0,"nero",A,B), moveE("cavallo",I,"bianco",A,B), pezzo("cavallo",I,"bianco",X,Y).
scaccoRe("pedone",I,"bianco",A,B):-moveE("pedone",I,"bianco",X,Y), pezzo("re",0,"nero",X,Y), pezzo("pedone",I,"bianco",A,B).


%croce
scaccoRe(P,I,"bianco",X,Y):- path(X,Y,1), pezzo(P, I, "bianco", X,Y).
scaccoRe(P,I,"bianco",X,Y):- path(X,Y,5), pezzo(P, I, "bianco", X,Y).
scaccoRe(P,I,"bianco",X,Y):- path(X,Y,7), pezzo(P, I, "bianco", X,Y).
scaccoRe(P,I,"bianco",X,Y):- path(X,Y,3), pezzo(P, I, "bianco", X,Y).

%diagonale
scaccoRe(P,I,"bianco",X,Y):- path(X,Y,0), pezzo(P, I, "bianco", X,Y).
scaccoRe(P,I,"bianco",X,Y):- path(X,Y,4), pezzo(P, I, "bianco", X,Y).
scaccoRe(P,I,"bianco",X,Y):- path(X,Y,2), pezzo(P, I, "bianco", X,Y).
scaccoRe(P,I,"bianco",X,Y):- path(X,Y,6), pezzo(P, I, "bianco", X,Y).

scaccoReJava(1):-scaccoRe(P,I,"bianco",X,Y).


%CALCOLO PERICOLO RE NERO

%vincoli per pericolo PEDONE
%vincoli per pericolo diagonale p diagonale s
:-pericolo("pedone",I,"nero",X,Y,2), aiMove("pedone",I,"nero",_,_).
:-pericolo("pedone",I,"nero",X,Y,0), aiMove("pedone",I,"nero",_,_).

:-pericolo("pedone",I,"nero",X,Y,4), aiMove("pedone",I,"nero",X,B), B=Y+1, B<8.
:-pericolo("pedone",I,"nero",X,Y,6), aiMove("pedone",I,"nero",X,B), B=Y+1, B<8.
:-pericolo("pedone",I,"nero",X,1,4), aiMove("pedone",I,"nero",X,3).
:-pericolo("pedone",I,"nero",X,1,6), aiMove("pedone",I,"nero",X,3).

:-pericolo("pedone",I,"nero",X,Y,6), aiMove("pedone",I,"nero",A,B), A=X+1, B=Y+1, A>=0, B<8, nemico(A,B).
:-pericolo("pedone",I,"nero",X,Y,4), aiMove("pedone",I,"nero",A,B), A=X-1, B=Y+1, A<8, B<8, nemico(A,B).

%vincoli pericolo cavallo
:-pericolo("cavallo",I,"nero",_,_), aiMove("cavallo",I,"nero",_,_).

%vincoli pericolo torre
%REGOLE PERICOLO CROCE
:-pericolo("torre",I,"nero",X,Y,3), aiMove("torre",I,"nero",X,B), Y!=B.
:-pericolo("torre",I,"nero",X,Y,7), aiMove("torre",I,"nero",X,B), Y!=B.

:-pericolo("torre",I,"nero",X,Y,1), aiMove("torre",I,"nero",A,Y), X!=A.
:-pericolo("torre",I,"nero",X,Y,5), aiMove("torre",I,"nero",A,Y), X!=A.

%REGOLE PERICOLO DIAGONALI
:-pericolo("torre",I,"nero",X,Y,K), aiMove("torre",I,"nero",_,_), K!=3, K!=7, K!=1, K!=5.

%vincoli pericolo alfiere

%REGOLE PERICOLO CROCE
:-pericolo("alfiere",I,"nero",X,Y,K), aiMove("alfiere",I,"nero",_,_), K!=0, K!=2, K!=4, K!=6.

%REGOLE PERICOLO DIAGONALI

:-pericolo("alfiere",I,"nero",X,Y,0), aiMove("alfiere",I,"nero",A,B), A>X, B<Y.
:-pericolo("alfiere",I,"nero",X,Y,0), aiMove("alfiere",I,"nero",A,B), A<X, B>Y.

:-pericolo("alfiere",I,"nero",X,Y,4), aiMove("alfiere",I,"nero",A,B), A>X, B<Y.
:-pericolo("alfiere",I,"nero",X,Y,4), aiMove("alfiere",I,"nero",A,B), A<X, B>Y.

:-pericolo("alfiere",I,"nero",X,Y,2), aiMove("alfiere",I,"nero",A,B), A<X, B<Y.
:-pericolo("alfiere",I,"nero",X,Y,2), aiMove("alfiere",I,"nero",A,B), A>X, B>Y.

:-pericolo("alfiere",I,"nero",X,Y,6), aiMove("alfiere",I,"nero",A,B), A<X, B<Y.
:-pericolo("alfiere",I,"nero",X,Y,6), aiMove("alfiere",I,"nero",A,B), A>X, B>Y.

%vincoli pericolo regina

%%REGOLE PERICOLO CROCE
:-pericolo("regina",I,"nero",X,Y,K), aiMove("regina",I,"nero",A,Y), A!=X, K!=0, K!=2, K!=3, K!=4, K!=6, K!=7.
:-pericolo("regina",I,"nero",X,Y,K), aiMove("regina",I,"nero",X,B), B!=Y, K!=0, K!=1, K!=2, K!=4, K!=5, K!=6.
:-pericolo("regina",I,"nero",X,Y,K), aiMove("regina",I,"nero",A,B), A<X, B<Y, K!=0, K!=2, K!=4, K!=6.
:-pericolo("regina",I,"nero",X,Y,K), aiMove("regina",I,"nero",A,B), A>X, B<Y, K!=0, K!=2, K!=4, K!=6.
:-pericolo("regina",I,"nero",X,Y,K), aiMove("regina",I,"nero",A,B), A>X, B>Y, K!=0, K!=2, K!=4, K!=6.
:-pericolo("regina",I,"nero",X,Y,K), aiMove("regina",I,"nero",A,B), A<X, B>Y, K!=0, K!=2, K!=4, K!=6.


%REGOLE PERICOLO DIAGONALI
:-pericolo("regina",I,"nero",X,Y,K), aiMove("regina",I,"nero",A,Y), A!=X, K!=1, K!=3, K!=5, K!=7.
:-pericolo("regina",I,"nero",X,Y,K), aiMove("regina",I,"nero",X,B), B!=Y, K!=1, K!=3, K!=5, K!=7.
:-pericolo("regina",I,"nero",X,Y,K), aiMove("regina",I,"nero",A,B), A<X, B<Y, K!=0, K!=4.
:-pericolo("regina",I,"nero",X,Y,K), aiMove("regina",I,"nero",A,B), A>X, B<Y, K!=2, K!=6.
:-pericolo("regina",I,"nero",X,Y,K), aiMove("regina",I,"nero",A,B), A>X, B>Y, K!=0, K!=4.
:-pericolo("regina",I,"nero",X,Y,K), aiMove("regina",I,"nero",A,B), A<X, B>Y, K!=2, K!=6.


%croce
pericolo(P,I,"nero",X,Y,1):- path(X,Y,1), focus(P,I,"nero", X,Y).
pericolo(P,I,"nero",X,Y,5):- path(X,Y,5), focus(P,I,"nero", X,Y).
pericolo(P,I,"nero",X,Y,7):- path(X,Y,7), focus(P,I,"nero", X,Y).
pericolo(P,I,"nero",X,Y,3):- path(X,Y,3), focus(P,I,"nero", X,Y).

%diagonali
pericolo(P,I,"nero",X,Y,0):- path(X,Y,0), focus(P,I,"nero", X,Y).
pericolo(P,I,"nero",X,Y,4):- path(X,Y,4), focus(P,I,"nero", X,Y).
pericolo(P,I,"nero",X,Y,2):- path(X,Y,2), focus(P,I,"nero", X,Y).
pericolo(P,I,"nero",X,Y,6):- path(X,Y,6), focus(P,I,"nero", X,Y).






%WEAK DEL PEZZO CHE PREFERISCE MANGIARE ROBA FORTE

:~ aiMove(P,I,"nero",X,Y), not nemico(X,Y), cellaCoperta(X,Y). [2@6,X,Y]
:~ aiMove(P,I,"nero",X,Y), not nemico(X,Y), not cellaCoperta(X,Y). [1@6,X,Y]

:~ aiMove(P,I,"nero",X,Y), pezzo("pedone",J,"bianco",X,Y), cellaCoperta(X,Y). [2@6,X,Y]
:~ aiMove(P,I,"nero",X,Y), pezzo("pedone",J,"bianco",X,Y), not cellaCoperta(X,Y). [1@5,X,Y]

:~ aiMove(P,I,"nero",X,Y), pezzo("torre",J,"bianco",X,Y), cellaCoperta(X,Y). [2@5,X,Y]
:~ aiMove(P,I,"nero",X,Y), pezzo("torre",J,"bianco",X,Y), not cellaCoperta(X,Y). [1@4,X,Y]

:~ aiMove(P,I,"nero",X,Y), pezzo("alfiere",J,"bianco",X,Y), cellaCoperta(X,Y). [2@5,X,Y]
:~ aiMove(P,I,"nero",X,Y), pezzo("alfiere",J,"bianco",X,Y), not cellaCoperta(X,Y). [1@4,X,Y]

:~ aiMove(P,I,"nero",X,Y), pezzo("cavallo",J,"bianco",X,Y), cellaCoperta(X,Y). [2@4,X,Y]
:~ aiMove(P,I,"nero",X,Y), pezzo("cavallo",J,"bianco",X,Y), not cellaCoperta(X,Y). [1@3,X,Y]

:~ aiMove(P,I,"nero",X,Y), pezzo("regina",J,"bianco",X,Y), cellaCoperta(X,Y). [2@2,X,Y]
:~ aiMove(P,I,"nero",X,Y), pezzo("regina",J,"bianco",X,Y), not cellaCoperta(X,Y). [1@2,X,Y]


cellaCoperta(X,Y):- moveE(E,J,"bianco",X,Y).




:~mosseRe(C), safe(X,Y), aiMove(P,I,"nero",X,Y). [C@3,X,Y]

mosseRe(C):-#count{X,Y: mossaReImpedita(X,Y)}=A, #count{X,Y: moveE("re",I,"bianco",X,Y)}=B, C=B-A. 


coperturaPedoni(X,Y):-pezzo("pedone",I,"nero",A,B), not focus("pedone",I,"nero",A,B), Y=B+1, X=A+1, Y<8, X<8.
coperturaPedoni(X,Y):-pezzo("pedone",I,"nero",A,B), not focus("pedone",I,"nero",A,B), Y=B+1, X=A-1, Y<8, X>=0.
coperturaPedoni(X,Y):-newMove("pedone",I,"nero",A,B), Y=B+1, X=A+1, Y<8, X<8.
coperturaPedoni(X,Y):-newMove("pedone",I,"nero",A,B), Y=B+1, X=A-1, Y<8, X>=0.

mossaReImpedita(X,Y):-pezzo(P,J,"bianco",X,Y), moveE("re",I,"bianco",X,Y).
mossaReImpedita(X,Y):-coperturaPedoni(X,Y), moveE("re",I,"bianco",X,Y).
mossaReImpedita(X,Y):-move(P,J,"nero",X,Y), moveE("re",I,"bianco",X,Y), pezzo(P,J,"nero",A,B), not focus(P,J,"nero",A,B).
mossaReImpedita(X,Y):-copriamo(X,Y).

copriamo(A,B):-aiMove(P,I,"nero",X,Y), newMove(P,I,"nero",A,B), moveE("re",J,"bianco",A,B). 

safe(X,Y):-aiMove(P,I,"nero",X,Y), not cellaCoperta(X,Y).
safe(X,Y):-aiMove(P,I,"nero",X,Y), cellaCoperta(X,Y), not mossaReCoperta(X,Y), move(P1,I1,"nero",X,Y), pezzo(P1,I1,"nero",A,B), not focus(P1,I1,"nero",A,B).
safe(X,Y):-aiMove(P,I,"nero",X,Y), cellaCoperta(X,Y), not mossaReCoperta(X,Y), coperturaPedoni(X,Y).


mossaReCoperta(X,Y):-moveE("re",J,"bianco",X,Y), moveE(K,J1,"bianco",X,Y), K!="re".

:~ pezzo("re",J,"bianco",A,B), mosseRe(C), C<=1, not scaccoReBianco(A,B). [1@6, 3,3]

pezzoLasciato("regina",I,"nero",X,Y):-pezzo("regina",I,"nero",X,Y), not focus("regina",I,"nero",X,Y).
pezzoLasciato("cavallo",I,"nero",X,Y):-pezzo("cavallo",I,"nero",X,Y), not focus("cavallo",I,"nero",X,Y).
pezzoLasciato(P,I,"nero",X,Y):-pezzo(P,I,"nero",X,Y), not focus(P,I,"nero",X,Y).
:~ pezzoLasciato("regina",I,"nero",X,Y), moveE(P,J,"bianco",X,Y). [1@3,X,Y]
:~ pezzoLasciato("cavallo",I,"nero",X,Y), moveE(P,J,"bianco",X,Y). [1@3,X,Y]
:~pezzoLasciato(P,I,"nero",X,Y), moveE(E,J,"bianco",X,Y), P="torre". [1@2,X,Y]
:~pezzoLasciato(P,I,"nero",X,Y), moveE(E,J,"bianco",X,Y), P="alfiere". [1@2,X,Y]


